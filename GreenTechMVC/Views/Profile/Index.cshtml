@model DAL.DTOs.User.UserResponseDTO
@{
    ViewData["Title"] = "Thông tin cá nhân";
}

<div class="container mx-auto max-w-4xl py-8 px-4">
    <div class="bg-white rounded-lg shadow-md border border-gray-200 p-8">
        <!-- Header -->
        <div class="flex items-center justify-between mb-6 border-b pb-4">
            <h1 class="text-2xl font-bold text-[#007934] font-['Roboto_Condensed'] uppercase">
                Thông tin cá nhân
            </h1>
            <div class="flex gap-3">
                <a asp-controller="Profile" asp-action="Update"
                    class="px-4 py-2 bg-[#007934] text-white rounded-md hover:bg-[#006028] transition-colors text-sm font-['Roboto']">
                    <i class="fas fa-edit mr-1"></i> Chỉnh sửa
                </a>
            </div>
        </div>

        <!-- Success/Error Messages -->
        @if (TempData["SuccessMessage"] != null)
        {
            <div class="mb-4 p-4 bg-green-100 border border-green-400 text-green-700 rounded-md">
                @TempData["SuccessMessage"]
            </div>
        }
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="mb-4 p-4 bg-red-100 border border-red-400 text-red-700 rounded-md">
                @TempData["ErrorMessage"]
            </div>
        }

        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
            <!-- Avatar Section -->
            <div class="md:col-span-1">
                <div class="flex flex-col items-center">
                    @if (!string.IsNullOrEmpty(Model.Avatar))
                    {
                        <img src="@Model.Avatar" alt="@Model.FullName"
                            class="w-32 h-32 rounded-full object-cover border-4 border-gray-200 mb-4">
                    }
                    else
                    {
                        <div class="w-32 h-32 rounded-full bg-gray-200 flex items-center justify-center mb-4">
                            <i class="fas fa-user text-6xl text-gray-400"></i>
                        </div>
                    }
                    <form id="uploadAvatarForm" enctype="multipart/form-data" class="w-full">
                        @Html.AntiForgeryToken()
                        <label for="avatarFile" class="cursor-pointer">
                            <span
                                class="px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition-colors text-sm font-['Roboto'] inline-block">
                                <i class="fas fa-camera mr-1"></i> Đổi avatar
                            </span>
                            <input type="file" id="avatarFile" name="avatarFile" accept="image/*" class="hidden" />
                        </label>
                    </form>
                    <p class="text-sm text-gray-500 mt-2">Họ tên: <strong>@Model.FullName</strong></p>
                </div>
            </div>

            <!-- Profile Information -->
            <div class="md:col-span-2 space-y-4">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1 font-['Roboto']">Email</label>
                        <p class="text-gray-900 bg-gray-50 p-2 rounded-md">@Model.Email</p>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1 font-['Roboto']">Số điện
                            thoại</label>
                        <p class="text-gray-900 bg-gray-50 p-2 rounded-md">@Model.Phone</p>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1 font-['Roboto']">Tỉnh/Thành
                            phố</label>
                        <p class="text-gray-900 bg-gray-50 p-2 rounded-md">@Model.Province</p>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1 font-['Roboto']">Quận/Huyện</label>
                        <p class="text-gray-900 bg-gray-50 p-2 rounded-md">@Model.District</p>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1 font-['Roboto']">Phường/Xã</label>
                        <p class="text-gray-900 bg-gray-50 p-2 rounded-md">@Model.Ward</p>
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-1 font-['Roboto']">Địa chỉ cụ
                            thể</label>
                        <p class="text-gray-900 bg-gray-50 p-2 rounded-md">@(string.IsNullOrEmpty(Model.SpecificAddress)
                                                        ? "Chưa có" : Model.SpecificAddress)</p>
                    </div>
                </div>

                <!-- Account Stats -->
                <div class="grid grid-cols-2 gap-4 mt-6 pt-6 border-t">
                    <div class="bg-blue-50 p-4 rounded-md">
                        <p class="text-sm text-gray-600 font-['Roboto']">Điểm tích lũy</p>
                        <p class="text-2xl font-bold text-blue-700">@Model.Points</p>
                    </div>
                    <div class="bg-green-50 p-4 rounded-md">
                        <p class="text-sm text-gray-600 font-['Roboto']">Số dư ví</p>
                        <p class="text-2xl font-bold text-green-700">@Model.WalletBalance.ToString("N0") ₫</p>
                    </div>
                </div>

                <!-- Actions -->
                <div class="mt-6 pt-6 border-t">
                    <a asp-controller="Profile" asp-action="ChangePassword"
                        class="inline-block px-4 py-2 bg-gray-100 text-gray-700 rounded-md hover:bg-gray-200 transition-colors text-sm font-['Roboto']">
                        <i class="fas fa-lock mr-1"></i> Đổi mật khẩu
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.getElementById('avatarFile').addEventListener('change', function (e) {
        const file = e.target.files[0];
        if (!file) return;

        // Validate file type
        const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp'];
        if (!allowedTypes.includes(file.type)) {
            alert('Chỉ chấp nhận file ảnh với định dạng: JPG, JPEG, PNG, GIF, WEBP');
            e.target.value = '';
            return;
        }

        // Validate file size (5MB)
        if (file.size > 5 * 1024 * 1024) {
            alert('Kích thước file không được vượt quá 5MB');
            e.target.value = '';
            return;
        }

        // Upload file
        const formData = new FormData();
        formData.append('avatarFile', file);
        formData.append('__RequestVerificationToken', document.querySelector('input[name="__RequestVerificationToken"]').value);

        fetch('@Url.Action("UploadAvatar", "Profile")', {
            method: 'POST',
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Update avatar image
                    const img = document.querySelector('img[alt="@Model.FullName"]');
                    if (img) {
                        img.src = data.avatarUrl + '?t=' + new Date().getTime(); // Add timestamp to force refresh
                    } else {
                        // If no avatar exists, reload page to show new avatar
                        location.reload();
                    }
                    alert(data.message);
                } else {
                    alert(data.message || 'Upload thất bại');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Đã có lỗi xảy ra khi upload avatar');
            })
            .finally(() => {
                e.target.value = '';
            });
    });
</script>
